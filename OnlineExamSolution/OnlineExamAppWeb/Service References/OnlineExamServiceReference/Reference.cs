//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnlineExamApp.OnlineExamServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OnlineExamServiceReference.IOnlineExamAppService")]
    public interface IOnlineExamAppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineExamAppService/GetQuestion", ReplyAction="http://tempuri.org/IOnlineExamAppService/GetQuestionResponse")]
        OnlineExamApp.Business.ViewModel.QuestionProposedAnswersViewModel GetQuestion(System.Nullable<int> questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineExamAppService/GetQuestion", ReplyAction="http://tempuri.org/IOnlineExamAppService/GetQuestionResponse")]
        System.Threading.Tasks.Task<OnlineExamApp.Business.ViewModel.QuestionProposedAnswersViewModel> GetQuestionAsync(System.Nullable<int> questionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineExamAppService/Test", ReplyAction="http://tempuri.org/IOnlineExamAppService/TestResponse")]
        OnlineExamApp.Business.ViewModel.CandidateViewModel Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineExamAppService/Test", ReplyAction="http://tempuri.org/IOnlineExamAppService/TestResponse")]
        System.Threading.Tasks.Task<OnlineExamApp.Business.ViewModel.CandidateViewModel> TestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnlineExamAppServiceChannel : OnlineExamApp.OnlineExamServiceReference.IOnlineExamAppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnlineExamAppServiceClient : System.ServiceModel.ClientBase<OnlineExamApp.OnlineExamServiceReference.IOnlineExamAppService>, OnlineExamApp.OnlineExamServiceReference.IOnlineExamAppService {
        
        public OnlineExamAppServiceClient() {
        }
        
        public OnlineExamAppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OnlineExamAppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineExamAppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineExamAppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OnlineExamApp.Business.ViewModel.QuestionProposedAnswersViewModel GetQuestion(System.Nullable<int> questionId) {
            return base.Channel.GetQuestion(questionId);
        }
        
        public System.Threading.Tasks.Task<OnlineExamApp.Business.ViewModel.QuestionProposedAnswersViewModel> GetQuestionAsync(System.Nullable<int> questionId) {
            return base.Channel.GetQuestionAsync(questionId);
        }
        
        public OnlineExamApp.Business.ViewModel.CandidateViewModel Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<OnlineExamApp.Business.ViewModel.CandidateViewModel> TestAsync() {
            return base.Channel.TestAsync();
        }
    }
}
